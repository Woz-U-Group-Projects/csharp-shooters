// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValkyrieIMS.Models;

namespace ValkyrieIMS.Migrations
{
    [DbContext(typeof(ValkyrieIMSContext))]
    [Migration("20190630021002_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("ValkyrieIMS.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerEmail");

                    b.Property<string>("CustomerPhone");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int?>("SaleReceiptId");

                    b.HasKey("CustomerId");

                    b.HasIndex("SaleReceiptId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ValkyrieIMS.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<int?>("ProductNameProductId");

                    b.Property<decimal>("PurchasePrice");

                    b.Property<int>("Quantity");

                    b.Property<string>("VendorName");

                    b.HasKey("InvoiceId");

                    b.HasIndex("ProductNameProductId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ValkyrieIMS.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<int?>("InvoiceId");

                    b.Property<string>("ProductName");

                    b.Property<decimal>("PurchasePrice");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("SalePrice");

                    b.Property<int?>("SaleReceiptId");

                    b.Property<string>("Unit");

                    b.Property<string>("VendorName");

                    b.HasKey("ProductId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("SaleReceiptId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ValkyrieIMS.Models.SaleReceipt", b =>
                {
                    b.Property<int>("SaleReceiptId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerFirstNameCustomerId");

                    b.Property<int?>("CustomerLastNameCustomerId");

                    b.Property<int?>("ProductNameProductId");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("ReceiptDate");

                    b.Property<decimal>("SalePrice");

                    b.HasKey("SaleReceiptId");

                    b.HasIndex("CustomerFirstNameCustomerId");

                    b.HasIndex("CustomerLastNameCustomerId");

                    b.HasIndex("ProductNameProductId");

                    b.ToTable("SaleReceipts");
                });

            modelBuilder.Entity("ValkyrieIMS.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("InvoiceId");

                    b.Property<string>("VendorAddress");

                    b.Property<string>("VendorEmail");

                    b.Property<string>("VendorName");

                    b.Property<string>("VendorPhone");

                    b.HasKey("VendorId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("ValkyrieIMS.Models.Customer", b =>
                {
                    b.HasOne("ValkyrieIMS.Models.SaleReceipt")
                        .WithMany("Customers")
                        .HasForeignKey("SaleReceiptId");
                });

            modelBuilder.Entity("ValkyrieIMS.Models.Invoice", b =>
                {
                    b.HasOne("ValkyrieIMS.Models.Product", "ProductName")
                        .WithMany()
                        .HasForeignKey("ProductNameProductId");
                });

            modelBuilder.Entity("ValkyrieIMS.Models.Product", b =>
                {
                    b.HasOne("ValkyrieIMS.Models.Invoice")
                        .WithMany("Products")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("ValkyrieIMS.Models.SaleReceipt")
                        .WithMany("Products")
                        .HasForeignKey("SaleReceiptId");
                });

            modelBuilder.Entity("ValkyrieIMS.Models.SaleReceipt", b =>
                {
                    b.HasOne("ValkyrieIMS.Models.Customer", "CustomerFirstName")
                        .WithMany()
                        .HasForeignKey("CustomerFirstNameCustomerId");

                    b.HasOne("ValkyrieIMS.Models.Customer", "CustomerLastName")
                        .WithMany()
                        .HasForeignKey("CustomerLastNameCustomerId");

                    b.HasOne("ValkyrieIMS.Models.Product", "ProductName")
                        .WithMany()
                        .HasForeignKey("ProductNameProductId");
                });

            modelBuilder.Entity("ValkyrieIMS.Models.Vendor", b =>
                {
                    b.HasOne("ValkyrieIMS.Models.Invoice")
                        .WithMany("Vendors")
                        .HasForeignKey("InvoiceId");
                });
#pragma warning restore 612, 618
        }
    }
}
